import { rTextEdit } from "components/textInput.slint";
import { rButton } from "components/button.slint";
import { StandardTableView } from "std-widgets.slint";
import { UserRow } from "components/user.slint";

export struct User {
    name: string,
    id: int
}
export component UsersPage {
    in-out property <[User]> users;
    callback deleteUser(int);
    callback createUser(string, string);
    callback refreshUsers();

    VerticalLayout {
        width: 100%;
        height: 100%;
        spacing: 8px;
        padding: 8px;
        alignment: start;
        Text {
            text: "Add New User";
            color: black;
            font-size: 16px;
            font-weight: 900;
        }

        HorizontalLayout {
            height: 35px;
            spacing: 4px;
            alignment: start;

            VerticalLayout {
                height: 35px;
                spacing: 4px;
                alignment: center;
                Text {
                    text: "username:";
                    color: black;
                }
            }

            VerticalLayout {
                height: 35px;
                spacing: 4px;
                alignment: center;
                username := rTextEdit {
                    type: InputType.text;
                }
            }
        }

        HorizontalLayout {
            height: 35px;
            spacing: 4px;
            alignment: start;

            VerticalLayout {
                height: 35px;
                spacing: 4px;
                alignment: center;
                Text {
                    text: "password:";
                    color: black;
                }
            }

            VerticalLayout {
                height: 35px;
                spacing: 4px;
                alignment: center;
                password := rTextEdit {
                    type: InputType.password;
                }
            }
        }

        rButton {
            text: "Add User";
            btncolor: white;
            clicked => {
                debug("Add User", username.text, password.text);
                createUser(username.text, password.text);
            }
        }

        VerticalLayout {
            width: 300px;
            spacing: 4px;
            rButton {
                text: "Refresh Users";
                btncolor: white;
                clicked => {
                    debug("refresh Users");
                }
            }
            Rectangle {
                width: 300px;
                height: 30px;
                background: black;
                HorizontalLayout {
                    width: 100%;
                    padding: 4px;
                    Text {
                        text: "ID";
                        color: white;
                    }

                    Text {
                        text: "Username";
                        color: white;
                    }

                    Text {
                        text: "Delete";
                        color: white;
                    }
                }
            }

            for user in users: UserRow {
                name: user.name;
                id: user.id;
                deleteUser(id) => {
                    deleteUser(id);
                }
            }
        }
    }
}
